disable_ligatures cursor
enabled_layouts Grid,Fat,Horizontal,Vertical,Splits,Tall
font_family Hack Nerd Font Mono
tab_activity_symbol *
tab_bar_edge top
tab_bar_style slant
url_prefixes file http https
url_style double
visual_bell_duration 0.2
window_padding_width 2

## macOS
macos_menubar_title_max_length 64
macos_option_as_alt both
macos_traditional_fullscreen yes

# Toggle macOS secure keyboard entry
# map opt+cmd+s toggle_macos_secure_keyboard_entry

## mouse settings
copy_on_select yes
mouse_map middle press ungrabbed paste_from_selection
# we have to discard the release event to prevent middle-click double-pasting
mouse_map middle release ungrabbed discard_event

### Keyboard shortcuts

#: Keys are identified simply by their lowercase Unicode characters.
#: For example: a for the A key, [ for the left square bracket key,
#: etc. For functional keys, such as Enter or Escape, the names are
#: present at Functional key definitions
#: <https://sw.kovidgoyal.net/kitty/keyboard-protocol/#functional-key-
#: definitions>. For modifier keys, the names are ctrl (control, ⌃),
#: shift (⇧), alt (opt, option, ⌥), super (cmd, command, ⌘). See also:
#: GLFW mods <https://www.glfw.org/docs/latest/group__mods.html>

# You can use the special action `no_op` to unmap a keyboard shortcut
# that is assigned in the default configuration:
#     map kitty_mod+space no_op

# Completely ignore a key event, not even sending it to the program running in
# the terminal, map it to `discard_event`:
#:     map kitty_mod+f1 discard_event

# You can combine multiple actions to be triggered by a single
# shortcut with combine action, using the syntax below:
#     map key combine <separator> action1 <separator> action2 <separator> action3 ...

# You can use multi-key shortcuts with the syntax shown below:
#     map key1>key2>key3 action

#: The full list of actions that can be mapped to key presses is
#: available here <https://sw.kovidgoyal.net/kitty/actions/>.

# Special modifier key alias for default shortcuts.
# NOTE: kitty_mod has to be mod keys, so it can only be used in combination with
# other keys (i.e. you can't use it as the leader key for multi-key shortcuts)
kitty_mod ctrl+shift

## Using `kitty_mod+j` as a "leader key"

# Remove all shortcut definitions up to this point. Useful, for instance, to
# remove the default shortcuts.
clear_all_shortcuts yes

# Clipboard
map super+c copy_from_clipboard
map super+v paste_from_clipboard

## Scrolling
map kitty_mod+up scroll_line_up
map kitty_mod+down scroll_line_down
map kitty_mod+page_up scroll_page_up
map kitty_mod+page_down scroll_page_down
map kitty_mod+home scroll_home
map kitty_mod+end scroll_end
# Scroll to previous shell prompt

# Scroll to next shell prompt
map kitty_mod+j>] scroll_to_prompt 1
# Browse scrollback buffer in pager
map kitty_mod+j>s show_scrollback

# Browse output of the last shell command in pager
map kitty_mod+j>g show_last_command_output

## Window management
map kitty_mod+j>enter new_window
map kitty_mod+j>r start_resizing_window
#::  Open a new window with the current working directory set
#::  to the working directory of the current window::
map kitty_mod+j>kitty_mod+enter launch --cwd=current
# Close window
map kitty_mod+j>w close_window
# neighboring window
map kitty_mod+j>h neighboring_window left
map kitty_mod+j>l neighboring_window right
map kitty_mod+j>j neighboring_window down
map kitty_mod+j>k neighboring_window up
# move window
map kitty_mod+j>f move_window_forward
map kitty_mod+j>b move_window_backward
map kitty_mod+j>t move_window_to_top

#: Visually select and focus window
#::  Display overlay numbers and alphabets on the window, and switch
#::  the focus to the window when you press the key. When there are
#::  only two windows, the focus will be switched directly without
#::  displaying the overlay. You can change the overlay characters and
#::  their order with option visual_window_select_characters.
map kitty_mod+j>v focus_visible_window

#: Visually swap window with another
map kitty_mod+j>s swap_with_window

# Tab management
map kitty_mod+j>n next_tab
map kitty_mod+j>p previous_tab
map kitty_mod+j>shift+enter new_tab
map kitty_mod+j>q close_tab

## Layout management
map kitty_mod+j>o next_layout
map kitty_mod+j>shift+o last_used_layout

## Font sizes
# Increase font size
map kitty_mod+j>plus change_font_size all +2.0
map kitty_mod+j>kp_add change_font_size all +2.0
# Decrease font size
map kitty_mod+j>minus change_font_size all -2.0
map kitty_mod+j>kp_substract change_font_size all -2.0
# Reset font size
map kitty_mod+j>backspace change_font_size all 0

## Function keys
map kitty_mod+j>f2 edit_config_file
map kitty_mod+j>f10 toggle_maximized
map kitty_mod+j>f11 toggle_fullscreen
#: Open kitty Website
map kitty_mod+j>f1 open_url https://sw.kovidgoyal.net/kitty/
#: Reset the terminal
map kitty_mod+j>f3 clear_terminal reset active
map kitty_mod+j>shift+f3 clear_terminal reset all
#: Reload kitty.conf
#::  Note that all options from the original kitty.conf are discarded,
#::  in other words the new configuration *replace* the old ones.
map kitty_mod+j>f5 load_config_file

#: Debug kitty configuration
#::  Show details about exactly what configuration kitty is running
#::  with and its host environment. Useful for debugging issues.
# map kitty_mod+j>
# NOTE: if a shortcut mapping is invalid (typo, etc.), it will cause all of the
# previously defin ed maps to be lost, which means you can identify broken maps
# by which maps do/do not show up in the configuration
map control+shift+f6 debug_config

# BEGIN_KITTY_THEME
# Jellybeans
include current-theme.conf
# END_KITTY_THEME
